package br.senai.sp.api.resource;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import br.senai.sp.api.model.ItemPedido;
import br.senai.sp.api.model.Pedido;
import br.senai.sp.api.model.Produto;
import br.senai.sp.api.model.ProdutoDTO;
import br.senai.sp.api.repository.ItemPedidoRepository;
import br.senai.sp.api.repository.PedidoRepository;

@CrossOrigin(origins = "http://showdebolos.tk")
@RestController
@RequestMapping("/itemPedido")
public class ItemPedidoResource {
	
	@Autowired
	private ItemPedidoRepository itemPedidoRepository;
	
	
	@Autowired
	private PedidoRepository pedidoRepository;
	
	@GetMapping
	@CrossOrigin(origins = "http://localhost:3000")
	public List<ItemPedido> getItemPedidos(){
		return itemPedidoRepository.findAll();
	}
	
	
	@GetMapping("/{codPedido}")
	@CrossOrigin(origins = "http://localhost:3000")
	public List<ItemPedido> getProdutosPedido(@PathVariable Long codPedido){
		
		return itemPedidoRepository.findByCodPedido(codPedido);
		
	}
	
	//CADASTRAR O ITEM PEDIDO
	@PostMapping
	@CrossOrigin(origins = "http://localhost:3000")
	public ItemPedido salvarItemPedido(@RequestBody ItemPedido itemPedido) {
		
		//SALVANDO TODO O OBJETO ITEMPEDIDO
		ItemPedido salvarItemPedido = itemPedidoRepository.save(itemPedido);
		
		return salvarItemPedido;
		
	}
	
	//CADASTRAR PEDIDO E O ITEM PEDIDO COM VÁRIOS PRODUTOS 
	@PostMapping("/list")
	@CrossOrigin(origins = "http://localhost:3000")
	public ItemPedido salvarItemPedido(@RequestBody List<ItemPedido> itemPedido) {
		
		ItemPedido itemPedidoSalvo = new ItemPedido();
		Pedido pedido = new Pedido();
		ProdutoDTO produto = new ProdutoDTO();
		
		System.out.println("CÓDIGO DO CONFEITEIRO " + itemPedido.get(0).getProduto().getConfeiteiro());
		
		double total = 0.0; 
		
		pedido.setAprovacao(itemPedido.get(0).getPedido().getAprovacao());
		pedido.setCliente(itemPedido.get(0).getPedido().getCliente());
		pedido.setCodPedido(itemPedido.get(0).getPedido().getCodPedido());
		pedido.setDataEntrega(itemPedido.get(0).getPedido().getDataEntrega());
		pedido.setDataSolicitacao(itemPedido.get(0).getPedido().getDataSolicitacao());
		pedido.setObservacao(itemPedido.get(0).getPedido().getObservacao());
		pedido.setStatus(itemPedido.get(0).getPedido().getStatus());
		pedido.setTipoPagamento(itemPedido.get(0).getPedido().getTipoPagamento());
		
		Pedido pedidoSalvo = new Pedido();
		pedidoSalvo = pedidoRepository.save(pedido);
		
		
		for(int i=0; i < itemPedido.size(); i++) {
			
			produto.setAvaliacao(itemPedido.get(i).getProduto().getAvaliacao());
			produto.setCodProduto(itemPedido.get(i).getProduto().getCodProduto());
			produto.setConfeiteiro(itemPedido.get(i).getProduto().getConfeiteiro());
			produto.setDescricao(itemPedido.get(i).getProduto().getDescricao());
			produto.setFoto(itemPedido.get(i).getProduto().getFoto());
			produto.setNomeProduto(itemPedido.get(i).getProduto().getNomeProduto());
			produto.setPreco(itemPedido.get(i).getProduto().getPreco());
			
			total += itemPedido.get(i).getPedido().getValorTotal();	
			
			pedidoSalvo.setValorTotal(total);
			
			itemPedidoSalvo.setCodItemPedido((long) 0);
			itemPedidoSalvo.setQuantidade(itemPedido.get(i).getQuantidade());	
			
			itemPedidoSalvo.setProduto(produto);
			
			itemPedidoSalvo.setPedido(pedidoSalvo);
			
			System.out.println("VOLTA " + i);
			
			ItemPedido salvarItemPedido = itemPedidoRepository.save(itemPedidoSalvo);
		}
		
		
		return itemPedidoSalvo;
		
	}

}
